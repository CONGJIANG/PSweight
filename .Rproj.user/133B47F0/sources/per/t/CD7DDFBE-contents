
aaa<-function(x){
  environ<-environment()
  assign(x[1],1, envir = as.environment(-1))
  assign(x[2],2, envir = as.environment(-1))
  print(ATE)
  print(ATO)
  print(environ)
  print(as.environment(-1))

}


mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
       paste0(names(covM)[i],"_", covM[,i]))


covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)),x1=as.factor(rep(c('w','w1'),5)))


for(i in 1:ncol(covM)){
  if(class(covM[,i])=="factor") {
    if(length(table(covM[,i]))==1){
      stop("invariate covariate supplied ","\n")
    }else{
      covmtmp<-covM[,i]
      lev<-unique(as.character(as.factor(covmtmp)))
      cols <- paste0(names(covM)[i], "_", lev)
      covM[cols] <-0
      ncols=length(cols)
      for(j in 1:ncols){
        covM[cols[j]]<-1.*(covmtmp==lev[j])
      }


      #mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
      #       paste0(names(covM)[i],"_", covM[,i]))
      #cat_index<-c(cat_index,i)
    }
    #stop("Non-numeric values exist in covariates, please transform","\n")
  }
}


for(i in 1:5){
  print(environment())
}










library(PSweight)

dataNDCS<-read.csv('NCDS_complete.csv')
nameidx<-c(7:12,19,21)

#convert to factor
for(i in nameidx){
  dataNDCS[,i]<-as.factor(dataNDCS[,i])
  print(is.factor(dataNDCS[,i]))
}




ps.formula1<-Dany~white+maemp+sche+qmab2+qvab+qvab2+paed_u+maed_u+agepa+agema+pa_edage+ma_edage+pasc+sib_u+reg

ps.formula2<-Dhe~white+maemp+sche+qmab2+qvab+qvab2+paed_u+maed_u+agepa+agema+pa_edage+ma_edage+pasc+sib_u+reg

ps.formula3<-Dmult~white+maemp+sche+qmab2+qvab+qvab2+paed_u+maed_u+agepa+agema+pa_edage+ma_edage+pasc+sib_u+reg

out.formula<-wage~white+maemp+sche+qmab2+qvab+qvab2+paed_u+maed_u+agepa+agema+pa_edage+ma_edage+pasc+sib_u+reg

sum1<-SumStat(ps.formula3,data = dataNDCS)


PSweight(ps.formula1,yname = 'wage',data = dataNDCS,weight = 'ATE')

PSweight(ps.formula3,yname = 'wage',data = dataNDCS,weight = 'ATE')




a1<-PSweight(ps.formula1,yname = 'wage',data = dataNDCS,weight = 'ATT',augmentation = T,out.formula = out.formula,family = 'gaussian')

a2<-PSweight(ps.estimate = a1$propensity,zname='Dany',yname = 'wage',data = dataNDCS,weight = 'ATT',augmentation = T,out.formula = out.formula,family = 'gaussian')

a3<-PSweight(ps.formula1,yname = 'wage',data = dataNDCS,weight = 'ATT',bootstrap = T,R=50)


a2<-PSweight(ps.formula1,yname = 'wage',data = dataNDCS,weight = 'ATT',augmentation = T,out.formula = out.formula,family = 'gaussian',bootstrap = T,R=30)


a2<-PSweight(ps.estimate = a1$propensity,zname='Dany',yname = 'wage',data = dataNDCS,weight = 'ATE',augmentation = T,out.formula = out.formula,family = 'gaussian')



PSweight(ps.formula3,yname = 'wage',data = dataNDCS,weight = 'ATE',augmentation = T,out.formula = out.formula,family = 'gaussian')

PSweight(ps.formula3,yname = 'wage',data = dataNDCS,weight = 'ATE',augmentation = T,out.formula = out.formula,family = 'gaussian')

PSweight(ps.formula3,yname = 'wage',data = dataNDCS,weight = 'ATE',bootstrap = T,R=50)

#
# > PSweight(ps.formula1,yname = 'wage',data = dataNDCS,weight = 'ATT')
# Original group value:  0, 1
# Treatment group value:  1
#
# Point estimate:
#   1.8965, 2.1515
# >
#   > PSweight(ps.formula2,yname = 'wage',data = dataNDCS,weight = 'ATT')
# Original group value:  0, 1
# Treatment group value:  1
#
# Point estimate:
#   2.057, 2.2864
# >
#   >
#   > PSweight(ps.formula3,yname = 'wage',data = dataNDCS,weight = 'ATE',augmentation = T,out.formula = out.formula,family = 'gaussian')
# Original group value:  >=A/eq, None, O/eq
#
# Point estimate:
#   2.1426, 1.8408, 1.9649
# > PSweight(ps.formula3,yname = 'wage',data = dataNDCS,weight = 'ATE')
# Original group value:  >=A/eq, None, O/eq
#
# Point estimate:
#   2.1446, 1.8497, 1.965
# > PSweight(ps.formula3,yname = 'wage',data = dataNDCS,weight = 'ATE',bootstrap = T,R=50)
# bootstrap 50 samples
# Original group value:  >=A/eq, None, O/eq
#
# Point estimate:
#   2.1467, 1.853, 1.9655






