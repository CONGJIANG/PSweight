remove.packages("PSweight")
devtools::document()
devtools::document()
devtools::document()
library(PSweight)
devtools::use_build_ignore('README.md')
library(devtools)
use_build_ignore("README.md")
use_build_ignore("README.Rmd")
devtools::document()
check('')
check()
version
use_build_ignore("cran-comments.md")
document()
check()
release()
release()
document()
check()
release()
install.packages('git2r')
document()
release()
?print
?summary
jasa的DOI 是 <doi: 10.1080/01621459.2016.1260466>
devtools::document()
library(devtools)
check()
devtools::document()
check()
release()
message(1:10)
message('we are no longer')
warning(sfda)
warning('sfda')
for I in (1:100){
if I%%20==0{
message(i)
}}
for (I in 1:100){
if I%%20==0{
message(i)
}}
for(I in 1:100){
if (I%%20==0){
message(i)
}}
for(I in 1:100){
if (I%%20==0){
message(I)
}}
for(I in 1:100){
if (I%%20==0){
warning(I)
}}
for(I in 1:100){
if (I%%20==0){
warning('boot',I)
}}
for(I in 1:100){
if (I%%20==0){
message('boot ',I, 'sample')
}}
library()
library(devtools
)
document()
release()
library(devtools)
?assign()
environment()
aaa<-function(x){
environ<-environment()
assign(x[1],1,envir = environ)
assign(x[2],2,envir =environ)
print(ATE)
print(ATO)
}
aaa(c('ATE','ATO'))
aaa<-function(x){
environ<-environment()
assign(x[1],1,envir = environ)
assign(x[2],2,envir =environ)
print(ATE)
print(ATO)
print(environ)
}
aaa(c('ATE','ATO'))
?assign
as.environment()
as.environment(-1)
as.environment(1)
as.environment(0)
aaa<-function(x){
environ<-environment()
assign(x[1],1,envir = environ)
assign(x[2],2,envir =environ)
print(ATE)
print(ATO)
print(environ)
print(as.environment(-1))
}
aaa(c('ATE','ATO'))
for(i in 1:5){
print(environment())
}
?mapply(function, ...)
?mapply()
seq(5)
?rep
rep(c('a','b'),each=5)
covM<-cbind(rnorm(10),x=as.factor(rep(c('a','b'),each=5)))
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
cols <- paste0(names(covM)[i], "_", unique(as.character(as.factor(covM[,i]))))
covM[cols] <- 0
mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
paste0(names(covM)[i],"_", covM[,i]))
cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
covM
covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)))
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
cols <- paste0(names(covM)[i], "_", unique(as.character(as.factor(covM[,i]))))
covM[cols] <- 0
mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
paste0(names(covM)[i],"_", covM[,i]))
cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
cols <- paste0(names(covM)[i], "_", unique(as.character(as.factor(covM[,i]))))
covM[cols] <- 0
mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
paste0(names(covM)[i],"_", covM[,i]))
#cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
covM
covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)))
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
cols <- paste0(names(covM)[i], "_", unique(as.character(as.factor(covM[,i]))))
covM[cols] <- 0
mapply(function(x, y) covM[x, y] <- 1, seq(nrow(covM)),
paste0(names(covM)[i],"_", covM[,i]))
#cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
covM
covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)))
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
lev<-unique(as.character(as.factor(covM[,i])))
cols <- paste0(names(covM)[i], "_", lev)
covM[cols] <- 0
ncols=length(cols)
for(j in 1:ncols){
covM[cols[j]][covM[cols[j]]==lev[j]]<-1
}
#mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
#       paste0(names(covM)[i],"_", covM[,i]))
#cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
covM
covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)))
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
covmtmp<-covM[,i]
lev<-unique(as.character(as.factor(covmtmp)))
cols <- paste0(names(covM)[i], "_", lev)
covM[cols] <-0
ncols=length(cols)
for(j in 1:ncols){
covM[cols[j]]<-1.*(covmtmp==lev[j])
}
#mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
#       paste0(names(covM)[i],"_", covM[,i]))
#cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
covM
covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)),x1=factor(rep('w',10)))
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
covmtmp<-covM[,i]
lev<-unique(as.character(as.factor(covmtmp)))
cols <- paste0(names(covM)[i], "_", lev)
covM[cols] <-0
ncols=length(cols)
for(j in 1:ncols){
covM[cols[j]]<-1.*(covmtmp==lev[j])
}
#mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
#       paste0(names(covM)[i],"_", covM[,i]))
#cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
covM
covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)),x1=factor(rep(c('w','w1',5))))
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
covmtmp<-covM[,i]
lev<-unique(as.character(as.factor(covmtmp)))
cols <- paste0(names(covM)[i], "_", lev)
covM[cols] <-0
ncols=length(cols)
for(j in 1:ncols){
covM[cols[j]]<-1.*(covmtmp==lev[j])
}
#mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
#       paste0(names(covM)[i],"_", covM[,i]))
#cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
x1=factor(rep(c('w','w1',5)
)
covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)),x1=factor(rep(c('w','w1'),5)))
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
covmtmp<-covM[,i]
lev<-unique(as.character(as.factor(covmtmp)))
cols <- paste0(names(covM)[i], "_", lev)
covM[cols] <-0
ncols=length(cols)
for(j in 1:ncols){
covM[cols[j]]<-1.*(covmtmp==lev[j])
}
#mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
#       paste0(names(covM)[i],"_", covM[,i]))
#cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
)as.factor(rep(c('w','w1'),5))
as.factor(rep(c('w','w1'),5))
covM<-data.frame(x0=rnorm(10),x=as.factor(rep(c('a','b'),each=5)),x1=as.factor(rep(c('w','w1'),5)))
covM
for(i in 1:ncol(covM)){
if(class(covM[,i])=="factor") {
if(length(table(covM[,i]))==1){
stop("invariate covariate supplied ","\n")
}else{
covmtmp<-covM[,i]
lev<-unique(as.character(as.factor(covmtmp)))
cols <- paste0(names(covM)[i], "_", lev)
covM[cols] <-0
ncols=length(cols)
for(j in 1:ncols){
covM[cols[j]]<-1.*(covmtmp==lev[j])
}
#mapply(function(x, y) covM[x, y] <<- 1, seq(nrow(covM)),
#       paste0(names(covM)[i],"_", covM[,i]))
#cat_index<-c(cat_index,i)
}
#stop("Non-numeric values exist in covariates, please transform","\n")
}
}
covM
rm(list = ls())
document()
use_build_ignore('cran-comments.md')
check()
paste0('a','b')
paste0(1:10,1:10)
library(devtools)
document()
check()
release()
install.packages('Matchit')
install.packages('MatchIt')
library(MatchIt)
load('example.data')
